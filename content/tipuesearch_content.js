var tipuesearch = {"pages": [{'title': 'cd2021', 'text': '\n 40823121 粘晁維\xa0 \xa0倉儲: 40823121 \xa0 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0網頁: 40823121 \n \n \n 小組倉儲:\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 小組網頁: \n stage1-ag18 \xa0 \xa0 \xa0 \xa0  cd2021-stage1-ag18 \xa0\xa0  \xa0 \xa0 \xa0 \xa0 \xa0 \n stage2-ag5 \xa0 \xa0 \xa0 \xa0 \xa0 stage2-ag5 \n stage3-ag4 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n \n \n', 'tags': '', 'url': 'cd2021.html'}, {'title': 'stage-1', 'text': '', 'tags': '', 'url': 'stage-1.html'}, {'title': 'W1', 'text': '建立網頁 \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '分組-兩人專案 \n 標題:\xa0 2021-協同產品設計實習-stage1-ag18 \n \xa0 \xa0 \xa0 \xa0 專題題目:排球扣球練習器 \n \xa0 \xa0 \xa0 \xa0 第一位組員學號: 40823121\xa0 \n \xa0 \xa0 \xa0 \xa0 第二位組員學號: 40823135\xa0 \n \n', 'tags': '', 'url': 'W2.html'}, {'title': 'w3', 'text': 'CoppeliaSim \n 擊球器加入joint使其轉動 \n \n 加入球測試是否能跟預期的作棟一樣 \n 滾動的球無法跟預期的一樣夾在中間\xa0 \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '上台報告 \n \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'stage-2', 'text': '', 'tags': '', 'url': 'stage-2.html'}, {'title': 'w5', 'text': '4人小組專題 \n 延續之前的扣球機主題 \n 標題:\xa0 2021-協同產品設計實習-stage2-ag5 \n \xa0 \xa0 \xa0 \xa0\xa0 \n \xa0 \xa0 \xa0 \xa0 第一位組員學號: 40823102\xa0 \n \xa0 \xa0 \xa0 \xa0 第二位組員學號: 40823106\xa0 \n \xa0 \xa0 \xa0 \xa0\xa0 第三位組員學號: 40823121\xa0 \n \xa0 \xa0 \xa0 \xa0\xa0 第四位組員學號: 40823135\xa0 \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': '預定進度:繪製零件圖、在coppeliasim進行模擬並修正錯誤 \n 40823102負責繪圖 \n 40823106負責簡報製作 \n 40823121負責CoppeliaSim的模擬 \n 40823135負責PDF製作及報告 \n 骨架、球軌 \n \n \n \n 轉盤及支撐軸，透過轉盤週期作旋轉動作讓球也成週期落下 \n \n \n \n \n \n 發球器的軸、底座、擊球的轉臂 \n \n \n \n 發球器組合圖 \n \n \n \n 發球器做動 \n \n \n \n 整體組合圖 \n \n \n \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7-8', 'text': '修正零件圖、在coppeliasim進行模擬並修正錯誤、準備pdf、製作reavel並分配上台報告內容 \n 繪圖更改、Heroku協統 \n \n 經W7 coppeliasim進行模擬後發現轉盤太小會造成球一樣滾動因此將圓盤直徑加大 \n \n 模擬後發現須將底座挖圓盤軸的洞，不然組合圖放入coppeliasim時會自動視為一體，會導致無法驅動 \n \n', 'tags': '', 'url': 'w7-8.html'}, {'title': 'W9', 'text': '最終模擬做動還無法讓兩邊的圓盤都呈周期做動，只能兩個發球器旋轉跟一個圓盤轉動 \n', 'tags': '', 'url': 'W9.html'}, {'title': 'CoppeliaSim', 'text': '\n 擊球器的模擬 \n \n \n 圓盤與轉軸模擬 \n 物件在分解的時候沒辦法完全分解 導致圓盤轉軸只有左半部可以使用 \n \n \n \n 這邊成功讓轉盤跟及球器作動 \n \n \n \n 這邊加入球後，轉盤會傾斜導致圓盤無法正常旋轉，球體爺無法預期的落下。 \n \n \n \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'stage-3', 'text': '\n', 'tags': '', 'url': 'stage-3.html'}, {'title': 'W10', 'text': '分組-八人專案 \n \xa0 \xa0 \xa0 \xa0 專題題目:仿生四腳獸 \n \xa0 \xa0 \xa0 \xa0 \n 張欽堯 40823114\xa0 \n 粘晁維 40823121\xa0 \n 陳佑杰 40823127\xa0 \n 林澤叡 40823135\xa0 \n 廖韋博 40823142\xa0 \n 柯晉瑚 40823144\xa0 \n 蕭宏翔 40823146\xa0 \n 韋誠昌 40823148\xa0 \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': 'YouTube直播-介紹組員協同 \n 遇到的問題:沒有直播過所以要等24小時才能拿到金鑰，只能趕快跟有開通的同學借帳號。 \n 由於obs無法擷取到顯示器 所以當天直播畫面都停留在chrome視窗 \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': 'YouTube直播-介紹Task2 上禮拜顯示器擷取問題排解後，當天可以正常直播。 \n \n \n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'w13', 'text': '四腳獸腳數修正設計圖 \n \n 由於先前的六腳獸行走即戰力還是不夠穩定，所以我們又修正了主體的設計，修正設計圖如下: \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w14', 'text': 'CoppeliaSim 控制程式學習流程: \n \n Lua embedded scripts - 根據 官方簡介 與 \xa0 Tutorial , 在 網際解譯器 中執行, 並參考 \xa0 CAD2020 CoppeliaSim \xa0 頁面中的範例, 了解如何利用 non-threaded and threaded Lua 操控模擬場景中的機電系統. \n Legacy Python remote API - 根據 簡介 , \xa0 客戶端需求說明 與 \xa0 Tutorial , 並參考 \xa0 CAD2020 CoppeliaSim \xa0 頁面中的範例, 查詢 \xa0 Python remote API 函式 , 了解如何利用 Python 操控模擬場景中的機電系統. \n B0-based remote API - 根據 簡介 了解如何利用 Python 操控模擬場景中的機電系統. \n 在 Python remote API 中導入 Flask, 並啟動 server 的多埠號架構, 將場景中的 image sensor 影像串流至各操控端瀏覽器, 以便執行組員間的場景協同控制系統設計. \n \n', 'tags': '', 'url': 'w14.html'}, {'title': 'Task1', 'text': '利用國立虎尾科技科技大學機械設計工程系cd2021下的task1進行作業。 \n 讀取 stage3_2a.txt, 建立 Stage3 的分組倉儲, 分組網頁, 以及各組員倉儲及網頁連結. \n 已知 \xa0 stage3_2a.txt 內容, 以及初步資料讀取程式: \n 程式碼(version1): \xa0 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n \n \n \n # open file, default is read mode, since txt content no chinese char4 \n # no encoding = "UTF- 08" is needed \n with  open ( "stage3_2a.txt" ) as fh: \n \xa0\xa0\xa0\xa0 # readlines will read into the whole line and put into list format 23 \n \xa0\xa0\xa0\xa0 # has \\n at the end of each line 13 \n \xa0\xa0\xa0\xa0 data  =   fh.readlines() \n #print(len(data))1 \n for   i  in   range ( len (data)): \n \xa0\xa0\xa0\xa0 group  =   data[i].rstrip( "\\n" ).split( "\\t" ) \n \xa0\xa0\xa0\xa0 print ( \'<p>\' + group[ 0 ] + \'|<a href="https://\' + group[ 1 ] + \'.github.io/stage3-ag\' + group[ 0 ][ 9 ] + \'">網站</a>|<a href="https://github.com/\' + group[ 2 ] + \'/stage3-ag\' + group[ 0 ][ 9 ] + \'">倉儲</a></p>\' ) \n \xa0\xa0\xa0\xa0 for   j  in   range ( 2 , 18 , 2 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( \'<p>\' + group[j] + \'|Website:\' + \'<a href="https://\' + group[j] + \'.github.io/cd2021\' + \'">\' + group[j] + \'</a>\' + \'|Repository:\' + \'<a href="https://github.com/\' + group[j] + \'/cd2021\' + \'">\' + group[j] + \'</a></p>\' ) \n \n \n \n \n \n \n \n version1程式中檔案資料夾\xa0 stage3_2a.txt \xa0其中學號有誤，會導致排序有誤。 \n 程式碼(version2): \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n \n \n \n # open file, default is read mode, since txt content no chinese char4 \n # no encoding = "UTF-08" is needed \n with  open ( "stage3_2a.txt" ) as fh: \n \xa0\xa0\xa0\xa0 # readlines will read into the whole line and put into list format 23 \n \xa0\xa0\xa0\xa0 # has \\n at the end of each line 13 \n \xa0\xa0\xa0\xa0 data  =   fh.readlines() \n \xa0\xa0\xa0\xa0 data  =   [a.replace( \'4823122\' , \'40823122\' )  for   a  in   data] \n \xa0\xa0\xa0\xa0 data  =   [c.replace( \'\\t\\t\\t\\t\' ,\'\')  for   c  in   data] \n \xa0\xa0\xa0\xa0 print (data) \n #print(len(data))1 \n for   i  in   range ( len (data)): \n \xa0\xa0\xa0\xa0 group  =   data[i].rstrip( "\\n" ).split( "\\t" ) \n \xa0\xa0\xa0\xa0 print ( \'<p>\' + group[ 0 ] + \'|<a href="https://\' + group[ 1 ] + \'.github.io/stage3-ag\' + group[ 0 ][ 9 ] + \'">網站</a>|<a href="https://github.com/\' + group[ 2 ] + \'/stage3-ag\' + group[ 0 ][ 9 ] + \'">倉儲</a></p>\' ) \n # the following will use group data to generate needed html \n \xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 for   j  in   range ( 2 , 18 , 2 ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 try : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( \'<p>\' + group[j] + \'|Website:\' + \'<a href="https://\' + group[j] + \'.github.io/cd2021\' + \'">\' + group[j] + \'</a>\' + \'|Repository:\' + \'<a href="https://github.com/\' + group[j] + \'/cd2021\' + \'">\' + group[j] + \'</a></p>\' ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 except : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 continue \n \n \n \n \n \n \n \n version2程式中字串\xa0 \n \n \n \n \n \n \n 1 \n \n \n \n with  open ( "stage3_2a.txt" ) as fh: \n \n \n \n \n \n \n \n 字串為: \n 開啟檔案 stage3_2a \n \n \n \n \n \n \n 1 \n \n \n \n data  =   fh.readlines() \n \n \n \n \n \n \n \n 字串為: \n 用於讀取所有行(直到結束)並返回列表，該列表可以由Python的for... in ...結構進行處理。 \n 如果碰到結束，則返回空字符串。 \n \n \n \n \n \n \n 1 \n \n \n \n data  =   [a.replace( \'4823122\' , \'40823122\' )  for   a  in   data] \n \n \n \n \n \n \n \n 字串為: \n 把字符串中的old（舊字符串） 替換成new(新字符串)，如果指定第三個參數max，則替換不超過max 次，等於把 "4823112" 換成 "40823112" \n \n \n \n \n \n \n 1 \n \n \n \n data  =   [c.replace( \'\\t\\t\\t\\t\' ,\'\')  for   c  in   data] \n \n \n \n \n \n \n \n 字串為: \n ( \'\\t\\t\\t\\t\' ,\'\')將排序出來的結果作空格 \n \n \n \n \n \n \n 1 \n 2 \n \n \n \n for   i  in   range ( len (data)): \n \xa0\xa0\xa0\xa0 group  =   data[i].rstrip( "\\n" ).split( "\\t" ) \n \n \n \n \n \n \n \n 字串為: \n 分析檔案範圍有六組，進行迴圈，變數為i \n 將data列表中第i項，去除元素\\n(換行)利用\\t(空格)分割變成元素(逗號自動補上) \n \n \n \n \n \n \n 1 \n \n \n \n print ( \'<p>\' + group[ 0 ] + \'|<a href="https://\' + group[ 1 ] + \'.github.io/stage3-ag\' + group[ 0 ][ 9 ] + \'">網站</a>|<a href="https://github.com/\' + group[ 2 ] + \'/stage3-ag\' + group[ 0 ][ 9 ] + \'">倉儲</a></p>\' ) \n \n \n \n \n \n \n \n 字串為: \n group[0][9]=第0個第9位 \n 用print依序索引group list 中的元素，放入html格式，依序列出 \n \n \n \n \n \n \n 1 \n \n \n \n for   j  in   range ( 2 , 18 , 2 ): \n \n \n \n \n \n \n \n 字串為: \n 從2開始每次跳2格最多跳到16不可超過18 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n try : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print ( \'<p>\' + group[j] + \'|Website:\' + \'<a href="https://\' + group[j] + \'.github.io/cd2021\' + \'">\' + group[j] + \'</a>\' + \'|Repository:\' + \'<a href="https://github.com/\' + group[j] + \'/cd2021\' + \'">\' + group[j] + \'</a></p>\' ) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 except : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 continue \n \n \n \n \n \n \n \n 用print依序索引group list 中的元素，放入html格式，依序列出來 \n \xa0 差別在於這行取組員的但因為有一組只有6人超出範圍所以一定會error。 \n 列出各分組倉儲, 分組網站與學員倉儲及學員網站連結: \n stage3_ag1 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823131 | Website: 40823131 \xa0 | Repository: 40823131 \xa0 | Group Website: 40823131 \n a40823112 | Website: a40823112 \xa0 | Repository: a40823112 \xa0 | Group Website: a40823112 \n 40823123 | Website: 40823123 \xa0 | Repository: 40823123 \xa0 | Group Website: 40823123 \n 40823145 | Website: 40823145 \xa0 | Repository: 40823145 \xa0 | Group Website: 40823145 \n 40823136 | Website: 40823136 \xa0 | Repository: 40823136 \xa0 | Group Website: 40823136 \n 40823109 | Website: 40823109 \xa0 | Repository: 40823109 \xa0 | Group Website: 40823109 \n 40823116 | Website: 40823116 \xa0 | Repository: 40823116 \xa0 | Group Website: 40823116 \n 40823108 | Website: 40823108 \xa0 | Repository: 40823108 \xa0 | Group Website: 40823108 \n stage3_ag2 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823151 | Website: 40823151 \xa0 | Repository: 40823151 \xa0 | Group Website: 40823151 \n 40623121 | Website: 40623121 \xa0 | Repository: 40623121 \xa0 | Group Website: 40623121 \n 40871106 | Website: 40871106 \xa0 | Repository: 40871106 \xa0 | Group Website: 40871106 \n 40823102 | Website: 40823102 \xa0 | Repository: 40823102 \xa0 | Group Website: 40823102 \n 40823104 | Website: 40823104 \xa0 | Repository: 40823104 \xa0 | Group Website: 40823104 \n 40823106 | Website: 40823106 \xa0 | Repository: 40823106 \xa0 | Group Website: 40823106 \n 40823101 | Website: 40823101 \xa0 | Repository: 40823101 \xa0 | Group Website: 40823101 \n 40823132 | Website: 40823132 \xa0 | Repository: 40823132 \xa0 | Group Website: 40823132 \n stage3_ag3 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823119 | Website: 40823119 \xa0 | Repository: 40823119 \xa0 | Group Website: 40823119 \n 40823150 | Website: 40823150 \xa0 | Repository: 40823150 \xa0 | Group Website: 40823150 \n 40823103 | Website: 40823103 \xa0 | Repository: 40823103 \xa0 | Group Website: 40823103 \n 40823107 | Website: 40823107 \xa0 | Repository: 40823107 \xa0 | Group Website: 40823107 \n 40523252 | Website: 40523252 \xa0 | Repository: 40523252 \xa0 | Group Website: 40523252 \n 40823154 | Website: 40823154 \xa0 | Repository: 40823154 \xa0 | Group Website: 40823154 \n stage3_ag4 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823142 | Website: 40823142 \xa0 | Repository: 40823142 \xa0 | Group Website: 40823142 \n 40823144 | Website: 40823144 \xa0 | Repository: 40823144 \xa0 | Group Website: 40823144 \n 40823127 | Website: 40823127 \xa0 | Repository: 40823127 \xa0 | Group Website: 40823127 \n 40823148 | Website: 40823148 \xa0 | Repository: 40823148 \xa0 | Group Website: 40823148 \n 40823121 | Website: 40823121 \xa0 | Repository: 40823121 \xa0 | Group Website: 40823121 \n 40823135 | Website: 40823135 \xa0 | Repository: 40823135 \xa0 | Group Website: 40823135 \n 40823114 | Website: 40823114 \xa0 | Repository: 40823114 \xa0 | Group Website: 40823114 \n 40823146 | Website: 40823146 \xa0 | Repository: 40823146 \xa0 | Group Website: 40823146 \n stage3_ag5 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823111 | Website: 40823111 \xa0 | Repository: 40823111 \xa0 | Group Website: 40823111 \n 40823115 | Website: 40823115 \xa0 | Repository: 40823115 \xa0 | Group Website: 40823115 \n 40823128 | Website: 40823128 \xa0 | Repository: 40823128 \xa0 | Group Website: 40823128 \n 40823120 | Website: 40823120 \xa0 | Repository: 40823120 \xa0 | Group Website: 40823120 \n 40823140 | Website: 40823140 \xa0 | Repository: 40823140 \xa0 | Group Website: 40823140 \n 40823124 | Website: 40823124 \xa0 | Repository: 40823124 \xa0 | Group Website: 40823124 \n 40823139 | Website: 40823139 \xa0 | Repository: 40823139 \xa0 | Group Website: 40823139 \n 40823126 | Website: 40823126 \xa0 | Repository: 40823126 \xa0 | Group Website: 40823126 \n stage3_ag6 | \xa0 網站 \xa0 | \xa0 倉儲 \n 40823152 | Website: 40823152 \xa0 | Repository: 40823152 \xa0 | Group Website: 40823152 \n 40823110 | Website: 40823110 \xa0 | Repository: 40823110 \xa0 | Group Website: 40823110 \n 40823122 | Website: 40823122 \xa0 | Repository: 40823122 \xa0 | Group Website: 40823122 \n 40823125 | Website: 40823125 \xa0 | Repository: 40823125 \xa0 | Group Website: 40823125 \n 40823117 | Website: 40823117 \xa0 | Repository: 40823117 \xa0 | Group Website: 40823117 \n 40823129 | Website: 40823129 \xa0 | Repository: 40823129 \xa0 | Group Website: 40823129 \n 40823149 | Website: 40823149 \xa0 | Repository: 40823149 \xa0 | Group Website: 40823149 \n 40823153 | Website: 40823153 \xa0 | Repository: 40823153 \xa0 | Group Website: 40823153 \n', 'tags': '', 'url': 'Task1.html'}, {'title': 'Task2', 'text': '\n \n \n \n', 'tags': '', 'url': 'Task2.html'}, {'title': 'w15', 'text': 'gitlab無法同步 \n 需使用信用卡驗證 \n \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'W16', 'text': 'Onshape 零組件繪製\xa0 \n 零組件必須在 \xa0 Onshape \xa0 繪圖, 並提供可公開分享之零組件連結於頁面及回報區中. \n 建立 CoppeliaSim 4.1.0 MTB robot 場景\xa0 \n 請以自行繪製之零件輸入 CoppeliaSim 後, 組合為 MTB robot 模型, 並利用 Leo Editor 以 require 導入 Lua 程式運作, 分別控制各軸轉動示範, 所完成的所有檔案請存入 W16_exam 後壓縮為 W16_exam.7z 後送至個人 \xa0 @gm \xa0 帳號下的 Google Drive 後將連結設為任何人皆可下載, 並將連結與操作嵌入影片放在 W16 頁面與回報區中 . \n 手臂末端加入 components-gripper-suction pad 吸盤\xa0 \n 請接續上述 MTB robot, 在其末端接上 force sensor 後接上標準 suction pad 後, 分別導入 W15 週線上課程之鍵盤控制程式後, 拍攝影片示範 W15 線上課程中之操作與示範過程. \n 逆向運動學函式\xa0 \n 請根據 W15 線上課程內容之 Inverse Kinematics 方程式 ( 影片1 \xa0 或 影片2 ), 以程式指定方塊取放之兩個位置 - (0.2, 0.7, 0.05) 與 (-0.3, -0.55, 0.05), 以前述 Leo Editor Lua 程式編寫方法, 分別採鍵盤控制與程式迴圈方式執行 W15 兩個指定位置之方塊取放. \n Python remote API 逆向運動學函式\xa0 \n 請利用 Python remote API 程式重現以迴圈方式執行 W15 兩個指定位置之方塊取放. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W16.html'}, {'title': 'Leo Editor', 'text': '', 'tags': '', 'url': 'Leo Editor.html'}, {'title': 'Blog', 'text': '建立blog \n 利用leo對pelican.leo檔案進行編輯 \n \n \n \n \n \n \n', 'tags': '', 'url': 'Blog.html'}, {'title': 'reveal', 'text': '\n 在這邊可以編輯簡報內容 \n \n', 'tags': '', 'url': 'reveal.html'}, {'title': 'ssh', 'text': '', 'tags': '', 'url': 'ssh.html'}, {'title': 'key produce', 'text': 'sh \n ssh-keygen -t rsa -b 4096 -C  "學號" \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'key produce.html'}, {'title': 'putty setting', 'text': '\n \n \n \n \n', 'tags': '', 'url': 'putty setting.html'}]};